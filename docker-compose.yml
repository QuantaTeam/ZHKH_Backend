---
version: "3.8"
services:
  traefik:
    image: "${DOCKER_IMAGE_PREFIX?Variable not set}traefik:2.9.1"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certificates:/certificates
      # - "${PROJECT_PATH-.}/environment:/app/config"
    command:
      - --providers.docker
      - --providers.docker.watch=true
      - --providers.docker.constraints=Label(`traefik.constraint-label`,
        `traefik-public`)
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=qufiwefefwoyn@gmail.com
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    env_file:
      - ./.env
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.traefik-public-http.rule=Host(`traefik.${DOMAIN?Variable
          not set}`)
        - traefik.http.routers.traefik-public-http.entrypoints=http
        - traefik.http.routers.traefik-public-http.middlewares=https-redirect
        - traefik.http.routers.traefik-public-https.rule=Host(`traefik.${DOMAIN?Variable
          not set}`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        - traefik.http.routers.traefik-public-https.service=api@internal
        - traefik.http.routers.traefik-public-https.tls.certresolver=le
        - traefik.http.services.traefik-public.loadbalancer.server.port=8085

  db:
    image: "${DOCKER_IMAGE_PREFIX?Variable not set}postgres:15.0"
    networks:
      - traefik-public
    volumes:
      - sarah-postgres:/var/lib/postgresql/data/pgdata
      - "${PROJECT_PATH-.}/db/data:/clientdata"
    ports:
      - "5432:5432"
    env_file: ./.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      # THIS IS UNSAFE!
      # - POSTGRES_HOST_AUTH_METHOD=trust
    deploy:
      placement:
        constraints:
          - node.role == manager

  sarah:
    # entrypoint: ["bash", "/entrypoint.local.sh"]
    image: "${DOCKER_IMAGE_PREFIX?Variable not set}barklan/sarah:rolling"
    ports:
      - 8000:8000
    build:
      context: .
      dockerfile: ./dockerfiles/sarah.dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
        DOCKER_IMAGE_PREFIX: ${DOCKER_IMAGE_PREFIX?Variable not set}
    networks:
      - traefik-public
    env_file:
      - ./.env
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.sarah-http.rule=Host(`${DOMAIN?Variable not
          set}`) && (PathPrefix(`/api/`) || PathPrefix(`/docs`) ||
          PathPrefix(`/redoc`) || PathPrefix(`/openapi.json`))
        - traefik.http.routers.sarah-http.entrypoints=http
        - traefik.http.routers.sarah-http.middlewares=https-redirect
        - traefik.http.routers.sarah-https.rule=Host(`${DOMAIN?Variable not
          set}`) && (PathPrefix(`/api/`) || PathPrefix(`/docs`) ||
          PathPrefix(`/redoc`) || PathPrefix(`/openapi.json`))
        - traefik.http.routers.sarah-https.entrypoints=https
        - traefik.http.routers.sarah-https.tls=true
        - traefik.http.routers.sarah-https.tls.certresolver=le
        - traefik.http.services.sarah.loadbalancer.server.port=8000

  gerda:
    image: "${DOCKER_IMAGE_PREFIX?Variable not set}barklan/gerda:rolling"
    build:
      context: .
      dockerfile: dockerfiles/gerda.dockerfile
      args:
        DOCKER_IMAGE_PREFIX: ${DOCKER_IMAGE_PREFIX?Variable not set}
    ports:
      - "8888:8888"
    networks:
      - traefik-public
    env_file:
      - ./.env
    environment:
      # CONFIG_ENV should be one of "dev", "devdocker", "prod"
      - CONFIG_ENV=prod
    deploy:
      placement:
        constraints:
          - node.role == manager

  frontend:
    image: "${DOCKER_IMAGE_PREFIX?Variable not set}barklan/frontend:rolling"
    build:
      context: .
      dockerfile: dockerfiles/frontend.dockerfile
      args:
        DOCKER_IMAGE_PREFIX: ${DOCKER_IMAGE_PREFIX?Variable not set}
    ports:
      - "3333:3333"
    networks:
      - traefik-public
    volumes:
      - "${PROJECT_PATH-.}/frontend:/usr/share/nginx/html"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.frontend-http.rule=Host(`${DOMAIN?Variable not
          set}`) && PathPrefix(`/`) && !PathPrefix(`/api/`) &&
          !PathPrefix(`/docs`) && !PathPrefix(`/redoc`) &&
          !PathPrefix(`/openapi.json`)
        - traefik.http.routers.frontend-http.entrypoints=http
        - traefik.http.services.frontend.loadbalancer.server.port=80
        - traefik.http.routers.frontend-http.middlewares=https-redirect
        - traefik.http.routers.frontend-https.rule=Host(`${DOMAIN?Variable not
          set}`) && PathPrefix(`/`) && !PathPrefix(`/api/`) &&
          !PathPrefix(`/docs`) && !PathPrefix(`/redoc`) &&
          !PathPrefix(`/openapi.json`)
        - traefik.http.routers.frontend-https.entrypoints=https
        - traefik.http.routers.frontend-https.tls=true
        - traefik.http.routers.frontend-https.tls.certresolver=le

volumes:
  traefik-public-certificates: null
  sarah-postgres:
    external: false

networks:
  traefik-public:
    external: true
